{"version":3,"file":"static/webpack/static/development/pages/_app.js.05ddd35c5d414df7cffe.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint, prodEndpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({headers}){\n\treturn new ApolloClient({\n\t\turi: process.env.NODE_ENV === 'development' ? endpoint : prodEndpoint,\n\t\trequest:operation => {\n\t\t\toperation.setContext({\n\t\t\t\tfetchOptions: {\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t},\n\t\t\t\theaders\n\t\t\t});\n\t\t},\n\t\tclientState: {\n\t      resolvers: {\n\t        Mutation: {\n\t          toggleCart(_, variables, { cache }) {\n\t            const { cartOpen } = cache.readQuery({\n\t              query: LOCAL_STATE_QUERY,\n\t            });\n\t            const data = {\n\t              data: { cartOpen: !cartOpen },\n\t            };\n\t            cache.writeData(data);\n\t            return data;\n\t          },\n\t        },\n\t      },\n\t      defaults: {\n\t        cartOpen: false,\n\t      },\n\t    },\n\t});\n}\n\nexport default withApollo(createClient);"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAEA;AADA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAVA;AADA;AAcA;AACA;AADA;AAfA;AAVA;AA8BA;AACA;AACA;;;;A","sourceRoot":""}